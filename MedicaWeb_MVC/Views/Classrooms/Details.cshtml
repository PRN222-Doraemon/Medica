@using MedicaWeb_MVC.ViewModels
@model ClassVM
<div class="class-container text-grey">
    <div class="d-flex align-items-center mb-4">
        <h1 class="me-3 mb-0 text-orange">@Model.Course.Name</h1>
        <span class="badge text-bg-@(Model.Mode == ClassroomMode.Online ? "success" : "danger")">@Model.Mode</span>
    </div>
    <p class="text-grey">@Model.Course.Description</p>
    <p class="text-grey">Total students: @Model.Students.Count()</p>
    <p>@("Start Date: " + Model.StartDate + " - End Date: " + Model.EndDate)</p>

    <!-- nav bar >-->
    <div class="nav-tabs">
        <a href="#" class="nav-item active" data-tab="students">
            <div class="icon">S</div>
            Students
        </a>
        <a href="#" class="nav-item" data-tab="resources">
            <div class="icon">R</div>
            Resource
        </a>
        <a href="#" class="nav-item" data-tab="qa">
            <div class="icon">Q</div>
            Q&A
        </a>
    </div>

    <!-- tab content -->
    <div id="tab-content">
        <div class="tab-pane active" id="students-tab">
            @await Html.PartialAsync("~/Views/Classrooms/PartialViews/_StudentsList.cshtml", Model.Students)
        </div>
        <div class="tab-pane" id="resources-tab">
            @await Html.PartialAsync("~/Views/Courses/PartialViews/_CourseContent.cshtml", Model.Course)
        </div>
        <div class="tab-pane" id="qa-tab">
            @* @await Html.PartialAsync("~/Views/Courses/PartialViews/_CourseQA.cshtml", Model.Course.Comments) *@
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const tabs = document.querySelectorAll(".nav-item");
        const tabPanes = document.querySelectorAll(".tab-pane");

        // Lấy tab active từ localStorage hoặc mặc định là "students"
        let activeTab = localStorage.getItem("activeTab") || "students";
        setActiveTab(activeTab);

        // Gán sự kiện click cho mỗi tab
        tabs.forEach(tab => {
            tab.addEventListener("click", function (event) {
                event.preventDefault();
                let selectedTab = this.getAttribute("data-tab");

                // Cập nhật trạng thái active
                setActiveTab(selectedTab);

                // Lưu vào localStorage để nhớ lần sau
                localStorage.setItem("activeTab", selectedTab);
            });
        });

        function setActiveTab(tabName) {
            // Xóa class active khỏi tất cả tab
            tabs.forEach(tab => tab.classList.remove("active"));
            document.querySelector(`.nav-item[data-tab="${tabName}"]`)?.classList.add("active");

            // Ẩn tất cả nội dung
            tabPanes.forEach(pane => pane.classList.remove("active"));

            // Hiển thị tab tương ứng
            document.getElementById(`${tabName}-tab`).classList.add("active");
        }
    });
</script>
