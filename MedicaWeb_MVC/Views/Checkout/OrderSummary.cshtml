@model IEnumerable<CartItemVM>

@inject IConfiguration configuration

@{
	var stripePublishableKey = configuration["Stripe:PublishableKey"];
}

<div class="container mt-4">
	<h2 class="mb-3">Order Summary</h2>

	<div class="table-responsive">
		<table class="table table-striped table-bordered">
			<thead class="thead-dark">
				<tr>
					<th>Course</th>
					<th>Description</th>
					<th>Start Date</th>
					<th>Duration</th>
					<th>Mode</th>
					<th>Instructor</th>
					<th>Price</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr>
						<td>@item.CourseName</td>
						<td>@(item.Description ?? "N/A")</td>
						<td>@item.StartDate.ToString("yyyy-MM-dd")</td>
						<td>@(item.Duration)</td>
						<td>@item.Mode.ToString()</td>
						<td>@(item.InstructorName)</td>
						<td>@item.Price.ToString("C")</td>
					</tr>
				}
			</tbody>
			<tfoot>
				<tr>
					<td colspan="6"><strong>Total</strong></td>
					<td><strong>@Model.Sum(i => i.Price).ToString("C")</strong></td>
				</tr>
			</tfoot>
		</table>
	</div>

	<button class="btn btn-success mt-2" onclick="openStripeSessionCheckout()">Checkout</button>
</div>

@section Scripts {
	<script src="https://js.stripe.com/v3/"></script>
	<script>
		async function openStripeSessionCheckout() {
			const stripe = Stripe("@stripePublishableKey");

			try {
				const response = await fetch('/Checkout/Checkout', {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' }
				});

				if (!response.ok) throw new Error("Failed to create checkout session");

				const data = await response.json();
				stripe.redirectToCheckout({ sessionId: data.sessionId });
			} catch (err) {
				alert("Error: " + err.message);
			}
		}
	</script>
}
