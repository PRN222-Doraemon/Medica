@model List<CartItemVM>
@inject IConfiguration configuration

@{
	var stripePublishableKey = configuration["Stripe:PublishableKey"];
}

<div class="container mt-4">
	<h2 class="mb-3">Order Summary</h2>
	@if (TempData["Info"] != null)
	{
		<div class="alert alert-info">@TempData["Info"]</div>
	}
	@if (TempData["Error"] != null)
	{
		<div class="alert alert-danger">@TempData["Error"]</div>
	}
	<div class="table-responsive">
		<table class="table table-striped table-bordered">
			<thead class="thead-dark">
				<tr>
					<th>Course</th>
					<th>Description</th>
					<th>Start Date</th>
					<th>End Date</th>
					<th>Price</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr>
						<td>@item.CourseName</td>
						<td></td>
						<td></td>
						<td></td>
						<td>@item.Price.ToString("C")</td>
					</tr>
				}
			</tbody>
			<tfoot>
				<tr>
					<td colspan="4"><strong>Total</strong></td>
					<td><strong>@Model.Sum(i => i.Price).ToString("C")</strong></td>
				</tr>
			</tfoot>
		</table>
	</div>
	<button id="checkout-button" class="btn btn-success mt-2">Checkout</button>
</div>


@section Scripts {
	<script src="https://js.stripe.com/v3/"></script>
	<script>
		const stripe = Stripe("@stripePublishableKey");
		document.getElementById('checkout-button').addEventListener('click', async () => {
			try {
				const response = await fetch('Checkout/Checkout', {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' }
				});
				const data = await response.json();
				if (data.error) {
					alert(data.error);
					return;
				}
				const result = await stripe.redirectToCheckout({ sessionId: data.sessionId });
				if (result.error) {
					alert(result.error.message);
				}
			} catch (error) {
				alert('An error occurred: ' + error.message);
			}
		});
	</script>
}